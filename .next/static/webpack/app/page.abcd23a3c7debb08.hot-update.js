"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/FlappyBirdGame.tsx":
/*!*******************************************!*\
  !*** ./src/components/FlappyBirdGame.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FlappyBirdGame; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 600;\nconst BIRD_SIZE = 20;\nconst PIPE_WIDTH = 60;\nconst PIPE_GAP = 150;\nconst GRAVITY = 0.3;\nconst JUMP_FORCE = -7;\nconst PIPE_SPEED = 2;\nfunction FlappyBirdGame() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const [canvasSize, setCanvasSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: DEFAULT_WIDTH,\n        height: DEFAULT_HEIGHT\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateSize = ()=>{\n            const width = window.innerWidth;\n            const height = window.innerHeight;\n            setCanvasSize({\n                width,\n                height\n            });\n            // Update canvas display size to match actual screen size\n            const canvas = canvasRef.current;\n            if (canvas) {\n                const ctx = canvas.getContext(\"2d\");\n                if (ctx) {\n                    // Set display size (CSS)\n                    canvas.style.width = \"\".concat(width, \"px\");\n                    canvas.style.height = \"\".concat(height, \"px\");\n                    // Set actual size in memory (scaled for high DPI)\n                    const dpr = window.devicePixelRatio || 1;\n                    canvas.width = width * dpr;\n                    canvas.height = height * dpr;\n                    // Scale the drawing context so everything draws at the correct size\n                    ctx.scale(dpr, dpr);\n                }\n            }\n        };\n        updateSize();\n        window.addEventListener(\"resize\", updateSize);\n        return ()=>window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        bird: {\n            x: canvasSize.width / 4,\n            y: canvasSize.height / 2,\n            velocity: 0,\n            radius: BIRD_SIZE / 2\n        },\n        pipes: [],\n        score: 0,\n        gameStarted: false,\n        gameOver: false\n    });\n    const resetGame = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setGameState({\n            bird: {\n                x: canvasSize.width / 4,\n                y: canvasSize.height / 2,\n                velocity: 0,\n                radius: BIRD_SIZE / 2\n            },\n            pipes: [],\n            score: 0,\n            gameStarted: false,\n            gameOver: false\n        });\n    }, [\n        canvasSize\n    ]);\n    const jump = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!gameState.gameStarted && !gameState.gameOver) {\n            setGameState((prev)=>({\n                    ...prev,\n                    gameStarted: true,\n                    bird: {\n                        ...prev.bird,\n                        velocity: JUMP_FORCE\n                    }\n                }));\n        } else if (gameState.gameStarted && !gameState.gameOver) {\n            setGameState((prev)=>({\n                    ...prev,\n                    bird: {\n                        ...prev.bird,\n                        velocity: JUMP_FORCE\n                    }\n                }));\n        } else if (gameState.gameOver) {\n            resetGame();\n        }\n    }, [\n        gameState.gameStarted,\n        gameState.gameOver,\n        resetGame\n    ]);\n    const createPipe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((x)=>{\n        const gapY = Math.random() * (canvasSize.height - PIPE_GAP - 100) + 50;\n        return {\n            x,\n            width: PIPE_WIDTH,\n            gapY,\n            gapHeight: PIPE_GAP,\n            passed: false\n        };\n    }, [\n        canvasSize\n    ]);\n    const checkCollision = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((bird, pipes)=>{\n        if (bird.y - bird.radius <= 0 || bird.y + bird.radius >= canvasSize.height) {\n            return true;\n        }\n        for (const pipe of pipes){\n            if (bird.x + bird.radius > pipe.x && bird.x - bird.radius < pipe.x + pipe.width && (bird.y - bird.radius < pipe.gapY || bird.y + bird.radius > pipe.gapY + pipe.gapHeight)) {\n                return true;\n            }\n        }\n        return false;\n    }, [\n        canvasSize\n    ]);\n    const gameLoop = ()=>{\n        setGameState((prev)=>{\n            if (prev.gameOver) return prev;\n            const newBird = {\n                ...prev.bird\n            };\n            let newPipes = [\n                ...prev.pipes\n            ];\n            let newScore = prev.score;\n            // Only apply physics when game is started\n            if (prev.gameStarted) {\n                newBird.velocity += GRAVITY;\n                newBird.y += newBird.velocity;\n                // Only move pipes when game is started\n                newPipes = newPipes.map((pipe)=>({\n                        ...pipe,\n                        x: pipe.x - PIPE_SPEED\n                    }));\n                newPipes.forEach((pipe)=>{\n                    if (!pipe.passed && newBird.x > pipe.x + pipe.width) {\n                        pipe.passed = true;\n                        newScore += 1;\n                    }\n                });\n                newPipes = newPipes.filter((pipe)=>pipe.x + pipe.width > 0);\n                if (newPipes.length === 0) {\n                    const gapY = Math.random() * (canvasSize.height - PIPE_GAP - 100) + 50;\n                    newPipes.push({\n                        x: canvasSize.width + 150,\n                        width: PIPE_WIDTH,\n                        gapY,\n                        gapHeight: PIPE_GAP,\n                        passed: false\n                    });\n                } else if (newPipes[newPipes.length - 1].x < canvasSize.width - 200) {\n                    const gapY = Math.random() * (canvasSize.height - PIPE_GAP - 100) + 50;\n                    newPipes.push({\n                        x: canvasSize.width,\n                        width: PIPE_WIDTH,\n                        gapY,\n                        gapHeight: PIPE_GAP,\n                        passed: false\n                    });\n                }\n            }\n            // Check collision\n            let collision = false;\n            if (prev.gameStarted) {\n                if (newBird.y - newBird.radius <= 0 || newBird.y + newBird.radius >= canvasSize.height) {\n                    collision = true;\n                }\n                for (const pipe of newPipes){\n                    if (newBird.x + newBird.radius > pipe.x && newBird.x - newBird.radius < pipe.x + pipe.width && (newBird.y - newBird.radius < pipe.gapY || newBird.y + newBird.radius > pipe.gapY + pipe.gapHeight)) {\n                        collision = true;\n                        break;\n                    }\n                }\n            }\n            return {\n                ...prev,\n                bird: newBird,\n                pipes: newPipes,\n                score: newScore,\n                gameOver: collision\n            };\n        });\n    };\n    const draw = ()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        setGameState((currentState)=>{\n            ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n            ctx.fillStyle = \"#87CEEB\";\n            ctx.fillRect(0, 0, canvasSize.width, canvasSize.height * 0.8);\n            ctx.fillStyle = \"#90EE90\";\n            ctx.fillRect(0, canvasSize.height * 0.8, canvasSize.width, canvasSize.height * 0.2);\n            currentState.pipes.forEach((pipe)=>{\n                ctx.fillStyle = \"#228B22\";\n                ctx.fillRect(pipe.x, 0, pipe.width, pipe.gapY);\n                ctx.fillRect(pipe.x, pipe.gapY + pipe.gapHeight, pipe.width, canvasSize.height - pipe.gapY - pipe.gapHeight);\n                ctx.strokeStyle = \"#006400\";\n                ctx.lineWidth = 3;\n                ctx.strokeRect(pipe.x, 0, pipe.width, pipe.gapY);\n                ctx.strokeRect(pipe.x, pipe.gapY + pipe.gapHeight, pipe.width, canvasSize.height - pipe.gapY - pipe.gapHeight);\n            });\n            ctx.fillStyle = \"#FFD700\";\n            ctx.beginPath();\n            ctx.arc(currentState.bird.x, currentState.bird.y, currentState.bird.radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.strokeStyle = \"#FFA500\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            ctx.fillStyle = \"#000\";\n            ctx.font = \"bold 24px Arial\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(\"Score: \".concat(currentState.score), canvasSize.width / 2, 40);\n            if (!currentState.gameStarted && !currentState.gameOver) {\n                ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n                ctx.fillRect(0, 0, canvasSize.width, canvasSize.height);\n                ctx.fillStyle = \"#FFF\";\n                ctx.font = \"bold 32px Arial\";\n                ctx.fillText(\"Flappy Bird\", canvasSize.width / 2, canvasSize.height / 2 - 50);\n                ctx.font = \"18px Arial\";\n                ctx.fillText(\"Tap to Start\", canvasSize.width / 2, canvasSize.height / 2 + 20);\n                ctx.font = \"14px Arial\";\n                ctx.fillText(\"Desktop: Space or ↑ Arrow | Mobile: Tap\", canvasSize.width / 2, canvasSize.height / 2 + 60);\n            }\n            if (currentState.gameOver) {\n                ctx.fillStyle = \"rgba(255, 0, 0, 0.7)\";\n                ctx.fillRect(0, 0, canvasSize.width, canvasSize.height);\n                ctx.fillStyle = \"#FFF\";\n                ctx.font = \"bold 32px Arial\";\n                ctx.fillText(\"Game Over\", canvasSize.width / 2, canvasSize.height / 2 - 50);\n                ctx.font = \"18px Arial\";\n                ctx.fillText(\"Final Score: \".concat(currentState.score), canvasSize.width / 2, canvasSize.height / 2);\n                ctx.fillText(\"Tap to Restart\", canvasSize.width / 2, canvasSize.height / 2 + 30);\n            }\n            return currentState;\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const animate = ()=>{\n            gameLoop();\n            draw();\n            animationRef.current = requestAnimationFrame(animate);\n        };\n        animationRef.current = requestAnimationFrame(animate);\n        return ()=>{\n            if (animationRef.current) {\n                cancelAnimationFrame(animationRef.current);\n            }\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleKeyPress = (e)=>{\n            if (e.code === \"Space\" || e.code === \"ArrowUp\") {\n                e.preventDefault();\n                jump();\n            }\n        };\n        window.addEventListener(\"keydown\", handleKeyPress);\n        return ()=>window.removeEventListener(\"keydown\", handleKeyPress);\n    }, [\n        jump\n    ]);\n    const handleTouch = (e)=>{\n        e.preventDefault();\n        jump();\n    };\n    const handleClick = (e)=>{\n        e.preventDefault();\n        jump();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        width: canvasSize.width,\n        height: canvasSize.height,\n        className: \"cursor-pointer select-none block\",\n        onTouchStart: handleTouch,\n        onClick: handleClick,\n        style: {\n            touchAction: \"none\",\n            width: \"100vw\",\n            height: \"100vh\",\n            display: \"block\"\n        }\n    }, void 0, false, {\n        fileName: \"/Users/lucasissayama/dev/claude-game/src/components/FlappyBirdGame.tsx\",\n        lineNumber: 338,\n        columnNumber: 5\n    }, this);\n}\n_s(FlappyBirdGame, \"HsaWII0M/6uKKvQyMeNN1pMM8DU=\");\n_c = FlappyBirdGame;\nvar _c;\n$RefreshReg$(_c, \"FlappyBirdGame\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/FlappyBirdGame.tsx\n"));

/***/ })

});